{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNSqsbJ1oKnHwTElpEgV7RQ"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":[],"metadata":{"id":"eAu87e-tmkFK"}},{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","\n","import matplotlib as mpl\n","import matplotlib.cm as cm\n","import matplotlib.pyplot as plt\n","import plotly.graph_objects as go\n","import seaborn as sns\n","\n","from sklearn.feature_extraction.text import CountVectorizer\n","from sklearn.feature_extraction import _stop_words\n","from nltk.stem import WordNetLemmatizer\n","from sklearn.feature_extraction.text import TfidfVectorizer\n","\n","import string\n","import re\n","\n","from sklearn.naive_bayes import MultinomialNB\n","from sklearn.naive_bayes import GaussianNB\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.svm import LinearSVC\n","\n","from sklearn.metrics import accuracy_score\n","import sklearn.metrics as metrics\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import confusion_matrix\n","from sklearn.metrics import classification_report\n","from sklearn import metrics\n","\n","from time import time\n","\n","import warnings\n","warnings.filterwarnings(\"ignore\")"],"metadata":{"id":"qcMUTSzTjq-9","executionInfo":{"status":"ok","timestamp":1727177701660,"user_tz":-330,"elapsed":3602,"user":{"displayName":"Roger Arnold","userId":"09812673021537292555"}}},"execution_count":1,"outputs":[]},{"cell_type":"code","source":["import pandas as pd"],"metadata":{"id":"t09-8vnioDKN","executionInfo":{"status":"ok","timestamp":1727177701661,"user_tz":-330,"elapsed":6,"user":{"displayName":"Roger Arnold","userId":"09812673021537292555"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/gdrive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yZ44SdTgmk0T","executionInfo":{"status":"ok","timestamp":1727177709725,"user_tz":-330,"elapsed":8069,"user":{"displayName":"Roger Arnold","userId":"09812673021537292555"}},"outputId":"5530a2a4-8d95-4704-d93a-01b5c3b0f88a"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/gdrive; to attempt to forcibly remount, call drive.mount(\"/content/gdrive\", force_remount=True).\n"]}]},{"cell_type":"code","source":["file_path = \"/content/gdrive/MyDrive/Colab Notebooks/Capstone project/Reviews.csv\""],"metadata":{"id":"Xb2IbXXimr4d","executionInfo":{"status":"ok","timestamp":1727177709725,"user_tz":-330,"elapsed":20,"user":{"displayName":"Roger Arnold","userId":"09812673021537292555"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["df = pd.read_csv(file_path)"],"metadata":{"id":"A2NlwOaAn__X","executionInfo":{"status":"ok","timestamp":1727177709725,"user_tz":-330,"elapsed":20,"user":{"displayName":"Roger Arnold","userId":"09812673021537292555"}}},"execution_count":5,"outputs":[]},{"cell_type":"markdown","source":["# 1. EDA Data Cleaning and Pre-Processing"],"metadata":{"id":"_jcrIytQNgj_"}},{"cell_type":"code","source":["df.head(2)"],"metadata":{"id":"mFlHjr9To-h2","colab":{"base_uri":"https://localhost:8080/","height":305},"executionInfo":{"status":"ok","timestamp":1727177709725,"user_tz":-330,"elapsed":19,"user":{"displayName":"Roger Arnold","userId":"09812673021537292555"}},"outputId":"051c9982-4f28-4ed4-ef51-f91460b3bdcb"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                     id            brand  \\\n","0  AV13O1A8GV-KLJ3akUyj  Universal Music   \n","1  AV14LG0R-jtxr-f38QfS         Lundberg   \n","\n","                                          categories  \\\n","0  Movies, Music & Books,Music,R&b,Movies & TV,Mo...   \n","1  Food,Packaged Foods,Snacks,Crackers,Snacks, Co...   \n","\n","                         manufacturer  \\\n","0  Universal Music Group / Cash Money   \n","1                            Lundberg   \n","\n","                                         name              reviews_date  \\\n","0   Pink Friday: Roman Reloaded Re-Up (w/dvd)  2012-11-30T06:21:45.000Z   \n","1  Lundberg Organic Cinnamon Toast Rice Cakes  2017-07-09T00:00:00.000Z   \n","\n","  reviews_didPurchase reviews_doRecommend  reviews_rating  \\\n","0                 NaN                 NaN               5   \n","1                True                 NaN               5   \n","\n","                                        reviews_text reviews_title  \\\n","0  i love this album. it's very good. more to the...  Just Awesome   \n","1  Good flavor. This review was collected as part...          Good   \n","\n","  reviews_userCity reviews_userProvince reviews_username user_sentiment  \n","0      Los Angeles                  NaN           joshua       Positive  \n","1              NaN                  NaN        dorothy w       Positive  "],"text/html":["\n","  <div id=\"df-7e57ebac-9194-4af4-bfc3-e152f01d20a4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>brand</th>\n","      <th>categories</th>\n","      <th>manufacturer</th>\n","      <th>name</th>\n","      <th>reviews_date</th>\n","      <th>reviews_didPurchase</th>\n","      <th>reviews_doRecommend</th>\n","      <th>reviews_rating</th>\n","      <th>reviews_text</th>\n","      <th>reviews_title</th>\n","      <th>reviews_userCity</th>\n","      <th>reviews_userProvince</th>\n","      <th>reviews_username</th>\n","      <th>user_sentiment</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>AV13O1A8GV-KLJ3akUyj</td>\n","      <td>Universal Music</td>\n","      <td>Movies, Music &amp; Books,Music,R&amp;b,Movies &amp; TV,Mo...</td>\n","      <td>Universal Music Group / Cash Money</td>\n","      <td>Pink Friday: Roman Reloaded Re-Up (w/dvd)</td>\n","      <td>2012-11-30T06:21:45.000Z</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>5</td>\n","      <td>i love this album. it's very good. more to the...</td>\n","      <td>Just Awesome</td>\n","      <td>Los Angeles</td>\n","      <td>NaN</td>\n","      <td>joshua</td>\n","      <td>Positive</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>AV14LG0R-jtxr-f38QfS</td>\n","      <td>Lundberg</td>\n","      <td>Food,Packaged Foods,Snacks,Crackers,Snacks, Co...</td>\n","      <td>Lundberg</td>\n","      <td>Lundberg Organic Cinnamon Toast Rice Cakes</td>\n","      <td>2017-07-09T00:00:00.000Z</td>\n","      <td>True</td>\n","      <td>NaN</td>\n","      <td>5</td>\n","      <td>Good flavor. This review was collected as part...</td>\n","      <td>Good</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>dorothy w</td>\n","      <td>Positive</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7e57ebac-9194-4af4-bfc3-e152f01d20a4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7e57ebac-9194-4af4-bfc3-e152f01d20a4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7e57ebac-9194-4af4-bfc3-e152f01d20a4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e810a654-4b33-4c7f-80e5-c32db69c61ae\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e810a654-4b33-4c7f-80e5-c32db69c61ae')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e810a654-4b33-4c7f-80e5-c32db69c61ae button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 30000,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 271,\n        \"samples\": [\n          \"AVpe_N91LJeJML43z4jD\",\n          \"AVpfbjraLJeJML439F91\",\n          \"AVpf0eb2LJeJML43EVSt\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"brand\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 214,\n        \"samples\": [\n          \"KIND\",\n          \"Spam\",\n          \"Plano\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"categories\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 270,\n        \"samples\": [\n          \"Home,Kids' Home,Girls' Room,Girls' Room Furniture,Home Ideas, Design & Inspiration,Modern Decor,Furniture,Home Office Furniture,Bookcases,Boys' Room,Boys' Room Furniture,Office Furniture,Kids Furniture,Kids Bedroom Furniture,Bookshelves,Natural Baby Products,Arts & Crafts, Educational Toys, Books,Back to School Supplies,Classroom Furniture,Classroom Cubbies & Coat Lockers\",\n          \"Home,Home Decor,Clocks,Wall Clocks,Decor,Office Supplies,Decorative Accents,Wall Decor,Office Decor\",\n          \"Movies, Music & Books,Ways To Shop Entertainment,Movie & Tv Box Sets,Movies,Horror,Movies & TV Shows,All Horror,Movies & Tv On Blu-Ray,Movies & TV,Blu-ray,Action & Adventure,Movies & Music,Holiday Shop\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"manufacturer\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 227,\n        \"samples\": [\n          \"Kind Fruit & Nut Bars\",\n          \"Naturtint Hair Color\",\n          \"Reckitt Benckiser\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 271,\n        \"samples\": [\n          \"Way Basics 3-Shelf Eco Narrow Bookcase Storage Shelf, Espresso - Formaldehyde Free - Lifetime Guarantee\",\n          \"Pocket Watch Wall Clock Distressed Black - Yosemite Home Decor174\",\n          \"The Resident Evil Collection 5 Discs (blu-Ray)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"reviews_date\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6857,\n        \"samples\": [\n          \"2016-03-20T00:00:00.000Z\",\n          \"2013-06-27T07:59:33.000Z\",\n          \"2013-11-21T00:00:00.000Z\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"reviews_didPurchase\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          false,\n          true\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"reviews_doRecommend\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"reviews_rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"reviews_text\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 27282,\n        \"samples\": [\n          \"Great color. Long lasting and makes my lips so smooth. Great product. This review was collected as part of a promotion.\",\n          \"ITS SUPER GOOD AND AMAZING I really like the packaging to I believe you should keep making this product and selling it was a little pricey but it was totally worth it.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"reviews_title\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 18535,\n        \"samples\": [\n          \"BRING BACK THE TOFFEE AND COCOA\",\n          \"Was a gift\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"reviews_userCity\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 977,\n        \"samples\": [\n          \"Bedford\",\n          \"Alaska\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"reviews_userProvince\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 42,\n        \"samples\": [\n          \"CO\",\n          \"VA\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"reviews_username\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 24914,\n        \"samples\": [\n          \"hewhois\",\n          \"george67\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"user_sentiment\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Negative\",\n          \"Positive\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["# prompt: generate a bar plot for df[\"user_sentiment\"]\n","\n","import matplotlib.pyplot as plt\n","\n","df[\"user_sentiment\"].value_counts().plot(kind='bar')\n","plt.show()"],"metadata":{"id":"BRylN_YqqnMh","colab":{"base_uri":"https://localhost:8080/","height":498},"executionInfo":{"status":"ok","timestamp":1727177709725,"user_tz":-330,"elapsed":18,"user":{"displayName":"Roger Arnold","userId":"09812673021537292555"}},"outputId":"49a6308c-230e-4224-b186-ca9e11bb65a3"},"execution_count":7,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["df.info()"],"metadata":{"id":"kFg9QhbepRyP","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1727177709725,"user_tz":-330,"elapsed":16,"user":{"displayName":"Roger Arnold","userId":"09812673021537292555"}},"outputId":"ff7396b8-919d-4bbd-c886-73432d8b617d"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 30000 entries, 0 to 29999\n","Data columns (total 15 columns):\n"," #   Column                Non-Null Count  Dtype \n","---  ------                --------------  ----- \n"," 0   id                    30000 non-null  object\n"," 1   brand                 30000 non-null  object\n"," 2   categories            30000 non-null  object\n"," 3   manufacturer          29859 non-null  object\n"," 4   name                  30000 non-null  object\n"," 5   reviews_date          29954 non-null  object\n"," 6   reviews_didPurchase   15932 non-null  object\n"," 7   reviews_doRecommend   27430 non-null  object\n"," 8   reviews_rating        30000 non-null  int64 \n"," 9   reviews_text          30000 non-null  object\n"," 10  reviews_title         29810 non-null  object\n"," 11  reviews_userCity      1929 non-null   object\n"," 12  reviews_userProvince  170 non-null    object\n"," 13  reviews_username      29937 non-null  object\n"," 14  user_sentiment        29999 non-null  object\n","dtypes: int64(1), object(14)\n","memory usage: 3.4+ MB\n"]}]},{"cell_type":"code","source":["# df['user_sentiment'].fillna(value = 'Positive', inplace = True)\n","\n","df[['id','reviews_text']][df['user_sentiment'].isnull() == True]"],"metadata":{"id":"dAND0vMtp5e0","colab":{"base_uri":"https://localhost:8080/","height":81},"executionInfo":{"status":"ok","timestamp":1727177709725,"user_tz":-330,"elapsed":14,"user":{"displayName":"Roger Arnold","userId":"09812673021537292555"}},"outputId":"7b5eda3a-6526-4ad5-b7c0-dfbcd83d48c5"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                         id                                       reviews_text\n","28354  AVpfRTh1ilAPnD_xYic2  my kids absolutely loved this film so much tha..."],"text/html":["\n","  <div id=\"df-5e0ac404-813d-4717-844e-7112e08c5231\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>reviews_text</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>28354</th>\n","      <td>AVpfRTh1ilAPnD_xYic2</td>\n","      <td>my kids absolutely loved this film so much tha...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5e0ac404-813d-4717-844e-7112e08c5231')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5e0ac404-813d-4717-844e-7112e08c5231 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5e0ac404-813d-4717-844e-7112e08c5231');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df[['id','reviews_text']][df['user_sentiment']\",\n  \"rows\": 1,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"AVpfRTh1ilAPnD_xYic2\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"reviews_text\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"my kids absolutely loved this film so much that we watched it twice. Having a digital copy means that every time we get in the car we get to watch it wherever we go. we even got to use our $5 reward coupon towards the purchase of this movie so we got an additional $5 off + we got to add the points towards our next rewards coupon we love the savings we get at Best Buy\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["df[['id','reviews_text']][df['user_sentiment'].isnull() == True].index[0]"],"metadata":{"id":"khVZDektqqjv","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1727177709725,"user_tz":-330,"elapsed":13,"user":{"displayName":"Roger Arnold","userId":"09812673021537292555"}},"outputId":"cdeda928-ed22-4f03-b657-99bc56ed9786"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["28354"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["df['user_sentiment'].fillna(value = 'Positive', inplace = True)"],"metadata":{"id":"AShMCxak8fXD","executionInfo":{"status":"ok","timestamp":1727177709726,"user_tz":-330,"elapsed":12,"user":{"displayName":"Roger Arnold","userId":"09812673021537292555"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["df.info()"],"metadata":{"id":"yvPYH32Q6oyG","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1727177709726,"user_tz":-330,"elapsed":12,"user":{"displayName":"Roger Arnold","userId":"09812673021537292555"}},"outputId":"8d328a77-5dbf-4699-b7c7-718d2f10446f"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 30000 entries, 0 to 29999\n","Data columns (total 15 columns):\n"," #   Column                Non-Null Count  Dtype \n","---  ------                --------------  ----- \n"," 0   id                    30000 non-null  object\n"," 1   brand                 30000 non-null  object\n"," 2   categories            30000 non-null  object\n"," 3   manufacturer          29859 non-null  object\n"," 4   name                  30000 non-null  object\n"," 5   reviews_date          29954 non-null  object\n"," 6   reviews_didPurchase   15932 non-null  object\n"," 7   reviews_doRecommend   27430 non-null  object\n"," 8   reviews_rating        30000 non-null  int64 \n"," 9   reviews_text          30000 non-null  object\n"," 10  reviews_title         29810 non-null  object\n"," 11  reviews_userCity      1929 non-null   object\n"," 12  reviews_userProvince  170 non-null    object\n"," 13  reviews_username      29937 non-null  object\n"," 14  user_sentiment        30000 non-null  object\n","dtypes: int64(1), object(14)\n","memory usage: 3.4+ MB\n"]}]},{"cell_type":"markdown","source":["# 2. Text Processing"],"metadata":{"id":"kqeO7A6RNkFI"}},{"cell_type":"code","source":["df['user_sentiment']=df.user_sentiment.map({'Positive':1 , 'Negative':0})"],"metadata":{"id":"7RWfFbHAqZY0","executionInfo":{"status":"ok","timestamp":1727177709726,"user_tz":-330,"elapsed":10,"user":{"displayName":"Roger Arnold","userId":"09812673021537292555"}}},"execution_count":13,"outputs":[]},{"cell_type":"markdown","source":["# 3. Text Cleaning"],"metadata":{"id":"-FLLeV8zenG7"}},{"cell_type":"code","source":["import spacy\n","nlp = spacy.load('en_core_web_sm')\n","\n","\n","\n","stopwords = _stop_words.ENGLISH_STOP_WORDS\n","lemmatizer = WordNetLemmatizer()\n","\n","def clean(doc):\n","    text_no_namedentities = []\n","    document = nlp(doc)\n","    ents = [e.text for e in document.ents]\n","    for item in document:\n","        if item.text in ents:\n","            pass\n","        else:\n","            text_no_namedentities.append(item.text)\n","    doc = (\" \".join(text_no_namedentities))\n","\n","    doc = doc.lower().strip()\n","    doc = doc.replace(\"</br>\", \" \")\n","    doc = doc.replace(\"-\", \" \")\n","    doc = \"\".join([char for char in doc if char not in string.punctuation and not char.isdigit()])\n","    doc = \" \".join([token for token in doc.split() if token not in stopwords])\n","    doc = \"\".join([lemmatizer.lemmatize(word) for word in doc])\n","    return doc"],"metadata":{"id":"d683CKjzebth","executionInfo":{"status":"ok","timestamp":1727177720533,"user_tz":-330,"elapsed":10817,"user":{"displayName":"Roger Arnold","userId":"09812673021537292555"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["# nltk.download(\"wordnet\", \"whatever_the_absolute_path_to_myapp_is/nltk_data/\")"],"metadata":{"id":"73qQ-3nIPhh1","executionInfo":{"status":"ok","timestamp":1727177720534,"user_tz":-330,"elapsed":9,"user":{"displayName":"Roger Arnold","userId":"09812673021537292555"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["# clean(df['reviews_text'][0])\n"],"metadata":{"id":"vIbBbNGrO0R8","executionInfo":{"status":"ok","timestamp":1727177720535,"user_tz":-330,"elapsed":9,"user":{"displayName":"Roger Arnold","userId":"09812673021537292555"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":["# df['reviews_text'] = df['reviews_text'].apply(clean)\n","# df.head()"],"metadata":{"id":"V3K8TrL8O8E0","executionInfo":{"status":"ok","timestamp":1727177720535,"user_tz":-330,"elapsed":8,"user":{"displayName":"Roger Arnold","userId":"09812673021537292555"}}},"execution_count":17,"outputs":[]},{"cell_type":"markdown","source":["# 3. TF IDF Vectorization"],"metadata":{"id":"h8vjidk2NxBj"}},{"cell_type":"code","source":["docs = list(df['reviews_text'])\n","tfidf_vectorizer = TfidfVectorizer(use_idf=True)\n","tfidf_vectorizer_vectors = tfidf_vectorizer.fit_transform(docs)\n","docs = tfidf_vectorizer_vectors.toarray()"],"metadata":{"id":"9zjIqot7kEHL","executionInfo":{"status":"ok","timestamp":1727177723743,"user_tz":-330,"elapsed":3215,"user":{"displayName":"Roger Arnold","userId":"09812673021537292555"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["X = docs\n","y = df['user_sentiment']\n","print(X.shape, y.shape)"],"metadata":{"id":"G5zicQ5CkvdO","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1727177723744,"user_tz":-330,"elapsed":6,"user":{"displayName":"Roger Arnold","userId":"09812673021537292555"}},"outputId":"3b01f399-d710-4727-9af1-7be90a4ec070"},"execution_count":19,"outputs":[{"output_type":"stream","name":"stdout","text":["(30000, 17597) (30000,)\n"]}]},{"cell_type":"markdown","source":["# 4. Train Test Split"],"metadata":{"id":"-y6L_ETfNzUV"}},{"cell_type":"code","source":["SEED=999\n","X_train,X_test,y_train,y_test=train_test_split(X, y, test_size=0.2, random_state=SEED, stratify=y)\n","print(X_train.shape, y_train.shape)\n","print(X_test.shape, y_test.shape)"],"metadata":{"id":"jyubN-8ZlFOa","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1727177725885,"user_tz":-330,"elapsed":2144,"user":{"displayName":"Roger Arnold","userId":"09812673021537292555"}},"outputId":"f324c57a-5f63-4ec7-c4f1-439658277e5a"},"execution_count":20,"outputs":[{"output_type":"stream","name":"stdout","text":["(24000, 17597) (24000,)\n","(6000, 17597) (6000,)\n"]}]},{"cell_type":"markdown","source":["# 5. Model Selection"],"metadata":{"id":"C76Ys6RaFAFs"}},{"cell_type":"markdown","source":["## 1. Naive Bayes"],"metadata":{"id":"2manjlzCFF7Y"}},{"cell_type":"code","source":["gnb = GaussianNB()\n","%time gnb.fit(X_train, y_train)\n","y_pred_train = gnb.predict(X_train)\n","y_pred_test = gnb.predict(X_test)\n","print(\"\\nTraining Accuracy score:\",accuracy_score(y_train, y_pred_train))\n","print(\"Testing Accuracy score:\",accuracy_score(y_test, y_pred_test))"],"metadata":{"id":"Rg4tB73qE-3S"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(classification_report(y_test, y_pred_test, target_names=['not relevant', 'relevant']))"],"metadata":{"id":"uadZzAfvI6N1"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["cm = confusion_matrix(y_test, y_pred_test)\n","# print('Confusion matrix\\n', cm)\n","\n","cm_matrix = pd.DataFrame(data=cm, columns=['Actual Positive', 'Actual Negative'],\n","                        index=['Predict Positive', 'Predict Negative'])\n","sns.heatmap(cm_matrix, annot=True, fmt='d', cmap='YlGnBu')\n","plt.show()"],"metadata":{"id":"e00-04P-I_dD"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["probs = gnb.predict_proba(X_test)\n","preds = probs[:,1]\n","fpr, tpr, threshold = metrics.roc_curve(y_test, preds)\n","roc_auc = metrics.auc(fpr, tpr)\n","\n","plt.title('Receiver Operating Characteristic')\n","plt.plot(fpr, tpr, 'b', label = 'AUC = %0.2f' % roc_auc)\n","plt.legend(loc = 'lower right')\n","plt.plot([0, 1], [0, 1],'r--')\n","plt.xlim([0, 1])\n","plt.ylim([0, 1])\n","plt.ylabel('True Positive Rate')\n","plt.xlabel('False Positive Rate')\n","plt.show()"],"metadata":{"id":"FS-C3iZDJEE1"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## 2. Logistic regression"],"metadata":{"id":"mbf2nkTLIxhE"}},{"cell_type":"code","source":["lr = LogisticRegression(random_state=SEED)\n","%time lr.fit(X_train, y_train)\n","\n","y_pred_train = lr.predict(X_train)\n","y_pred_test = lr.predict(X_test)\n","print(\"\\nTraining Accuracy score:\",accuracy_score(y_train, y_pred_train))\n","print(\"Testing Accuracy score:\",accuracy_score(y_test, y_pred_test))"],"metadata":{"id":"15eWa55DIxKW"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["cm = confusion_matrix(y_test, y_pred_test)\n","#print('Confusion matrix\\n', cm)\n","\n","cm_matrix = pd.DataFrame(data=cm, columns=['Actual Positive', 'Actual Negative'],\n","                        index=['Predict Positive', 'Predict Negative'])\n","sns.heatmap(cm_matrix, annot=True, fmt='d', cmap='YlGnBu')\n","plt.show()"],"metadata":{"id":"KKxg5k55JQ6E"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(classification_report(y_test, y_pred_test, target_names=['not relevant', 'relevant']))"],"metadata":{"id":"YJRu30yEKAhg"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["probs = lr.predict_proba(X_test)\n","preds = probs[:,1]\n","fpr, tpr, threshold = metrics.roc_curve(y_test, preds)\n","roc_auc = metrics.auc(fpr, tpr)\n","\n","plt.title('Receiver Operating Characteristic')\n","plt.plot(fpr, tpr, 'b', label = 'AUC = %0.2f' % roc_auc)\n","plt.legend(loc = 'lower right')\n","plt.plot([0, 1], [0, 1],'r--')\n","plt.xlim([0, 1])\n","plt.ylim([0, 1])\n","plt.ylabel('True Positive Rate')\n","plt.xlabel('False Positive Rate')\n","plt.show()"],"metadata":{"id":"sT94qWeFKCU3"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## 3. Support Vector Machines"],"metadata":{"id":"gGNoLFwJKEac"}},{"cell_type":"code","source":["svc =  LinearSVC(class_weight='balanced')\n","%time svc.fit(X_train, y_train)\n","\n","y_pred_train = svc.predict(X_train)\n","y_pred_test = svc.predict(X_test)\n","print(\"\\nTraining Accuracy score:\",accuracy_score(y_train, y_pred_train))\n","print(\"Testing Accuracy score:\",accuracy_score(y_test, y_pred_test))"],"metadata":{"id":"Uvv8XbEBKHbw"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["cm = confusion_matrix(y_test, y_pred_test)\n","# print('Confusion matrix\\n', cm)\n","\n","cm_matrix = pd.DataFrame(data=cm, columns=['Actual Positive', 'Actual Negative'],\n","                        index=['Predict Positive', 'Predict Negative'])\n","sns.heatmap(cm_matrix, annot=True, fmt='d', cmap='YlGnBu')\n","plt.show()"],"metadata":{"id":"pXBvHTK7KJnF"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(classification_report(y_test, y_pred_test, target_names=['not relevant', 'relevant']))"],"metadata":{"id":"OphM0ZLSKNRj"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["probs = svc._predict_proba_lr(X_test)\n","preds = probs[:,1]\n","fpr, tpr, threshold = metrics.roc_curve(y_test, preds)\n","roc_auc = metrics.auc(fpr, tpr)\n","\n","plt.title('Receiver Operating Characteristic')\n","plt.plot(fpr, tpr, 'b', label = 'AUC = %0.2f' % roc_auc)\n","plt.legend(loc = 'lower right')\n","plt.plot([0, 1], [0, 1],'r--')\n","plt.xlim([0, 1])\n","plt.ylim([0, 1])\n","plt.ylabel('True Positive Rate')\n","plt.xlabel('False Positive Rate')\n","plt.show()"],"metadata":{"id":"MNT_DjvYKOxQ"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## 4. Decision tree classifier"],"metadata":{"id":"sWH0J4FaKTzl"}},{"cell_type":"code","source":["from sklearn.tree import DecisionTreeClassifier\n","\n","dt = DecisionTreeClassifier(random_state=SEED)\n","%time dt.fit(X_train, y_train)\n","\n","y_pred_train = dt.predict(X_train)\n","y_pred_test = dt.predict(X_test)\n","print(\"\\nTraining Accuracy score:\",accuracy_score(y_train, y_pred_train))\n","print(\"Testing Accuracy score:\",accuracy_score(y_test, y_pred_test))"],"metadata":{"id":"hgTr-37mKW-r"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["cm = confusion_matrix(y_test, y_pred_test)\n","# print('Confusion matrix\\n', cm)\n","\n","cm_matrix = pd.DataFrame(data=cm, columns=['Actual Positive', 'Actual Negative'],\n","                        index=['Predict Positive', 'Predict Negative'])\n","sns.heatmap(cm_matrix, annot=True, fmt='d', cmap='YlGnBu')\n","plt.show()"],"metadata":{"id":"yCJ9uGCqKaXV"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(classification_report(y_test, y_pred_test, target_names=['not relevant', 'relevant']))\n"],"metadata":{"id":"eMB-XjyrLFi5"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## 5. Ensembling"],"metadata":{"id":"JeKaLflsLMsH"}},{"cell_type":"code","source":["from sklearn.ensemble import VotingClassifier\n","\n","classifiers = [('Decision Tree', dt),\n","               ('Logistic Regression', lr),\n","                ('Naive Bayes', gnb)\n","              ]\n","vc = VotingClassifier(estimators=classifiers)\n","# Fit 'vc' to the traing set and predict test set labels\n","vc.fit(X_train, y_train)\n","y_pred_train=vc.predict(X_train)\n","y_pred_test = vc.predict(X_test)\n","print(\"Training Accuracy score:\",accuracy_score(y_train, y_pred_train))\n","print(\"Testing Accuracy score:\",accuracy_score(y_test, y_pred_test))"],"metadata":{"id":"Ny08U8IJLQW2"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# predictions = pd.Series(vc.predict(X), name=\"relevant\")\n","# results = pd.concat([predictions],axis=1)\n","# results.to_csv(\"us-economic-news-relevance.csv\",index=False)"],"metadata":{"id":"Ox7rgN8SLTIy"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#5. Building the Recommendation System"],"metadata":{"id":"U5EZcEsiN0ol"}},{"cell_type":"markdown","source":["## i. Content based recommendation system"],"metadata":{"id":"t_JEozPCRN9e"}},{"cell_type":"code","source":["from sklearn.feature_extraction.text import TfidfVectorizer\n","from sklearn.metrics.pairwise import linear_kernel\n","\n","# Create a TF-IDF vectorizer to transform the reviews_text\n","tfidf = TfidfVectorizer(stop_words='english')\n","\n","# Fit and transform the reviews text to a TF-IDF matrix\n","tfidf_matrix = tfidf.fit_transform(df['reviews_text'].fillna(''))\n","\n","# Compute the cosine similarity matrix\n","cosine_sim = linear_kernel(tfidf_matrix, tfidf_matrix)\n","\n","# Create a mapping of product names to indices\n","indices = pd.Series(df.index, index=df['name']).drop_duplicates()\n","\n","def get_recommendations(product_name, cosine_sim=cosine_sim):\n","    idx = indices[product_name]\n","    sim_scores = list(enumerate(cosine_sim[idx]))\n","    sim_scores = sorted(sim_scores, key=lambda x: x[1], reverse=True)\n","    sim_scores = sim_scores[1:6]  # Get top 5 similar products\n","    product_indices = [i[0] for i in sim_scores]\n","    return df['name'].iloc[product_indices]\n","\n","# Example: Get recommendations for a specific product\n","recommendations = get_recommendations('Lundberg Organic Cinnamon Toast Rice Cakes')\n","print(recommendations)"],"metadata":{"id":"iYt3eC0nRTO-"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## ii. Collaborative Filtering:"],"metadata":{"id":"t8BqKkpKUexI"}},{"cell_type":"code","source":["from surprise import Reader, Dataset, SVD\n","from surprise.model_selection import cross_validate\n","\n","# Mapping sentiments to numeric values (Positive = 1, Negative = 0)\n","data['user_sentiment_numeric'] = data['user_sentiment'].map({'Positive': 1, 'Negative': 0})\n","\n","# Create the required data for the Surprise library\n","# Reader to specify the rating scale (0 to 1, because we are using sentiment)\n","reader = Reader(rating_scale=(0, 1))\n","\n","# Load the data into a Surprise dataset\n","# Using columns: user (reviews_username), item (name), and sentiment (user_sentiment_numeric)\n","sentiment_data = Dataset.load_from_df(data[['reviews_username', 'name', 'user_sentiment_numeric']], reader)\n","\n","# Use SVD (Singular Value Decomposition) for collaborative filtering\n","svd_model = SVD()\n","\n","# Perform cross-validation to evaluate the model\n","cross_validate(svd_model, sentiment_data, measures=['RMSE', 'MAE'], cv=5, verbose=True)\n","\n","# Fit the model on the entire dataset\n","trainset = sentiment_data.build_full_trainset()\n","svd_model.fit(trainset)\n","\n","# Function to predict sentiment for a user and product\n","def predict_sentiment(user_id, product_name):\n","    return svd_model.predict(user_id, product_name).est\n","\n","# Example: Predict sentiment for a user and product\n","prediction = predict_sentiment('joshua', 'Lundberg Organic Cinnamon Toast Rice Cakes')\n","print(f'Predicted sentiment: {prediction}')"],"metadata":{"id":"9_i2lmqAUQvl"},"execution_count":null,"outputs":[]}]}